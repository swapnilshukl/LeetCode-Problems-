Question-

Suppose Andy and Doris want to choose a restaurant for dinner, and they both have a list of favorite restaurants represented by strings.

You need to help them find out their common interest with the least list index sum. If there is a choice tie between answers, output all of them with no order requirement. You could assume there always exists an answer.

link-https://leetcode.com/explore/learn/card/hash-table/184/comparison-with-other-data-structures/1177/

Solution:

vector<string> findRestaurant(vector<string>& list1, vector<string>& list2) {

 unordered_map<string,int>m;
 vector<string>res;
 int min=INT_MAX;
 
 for(int i=0; i<list1.size(); i++) m[list1[i]]=i;
 for(int i=0; i<list2.size(); i++)
   if(m.count[list2[i]]!=0)
     if(m[list2[i]]+i <min) min= m[list2[i]]+i, res.clear(), res.push_back(list2[i]);
     
     else if(m[list2[i]]+i ==min) res.push_back(list2[i]);
     
     return res;

}

